
<main class="flex-shrink-0 mt-5">
    <div class="container py-4 px-5 mt-5">
        <h2 class="border-1 border-bottom border-dark">The Code for TATTARRATTAT in C# .NET</h2>
        <div class="row row-cols-1 row-cols-lg-2">
            <div class="col-lg-8">
                <h4 class="mt-4 pt-4">The Model</h4>
                <pre class="line-numbers">
                <code class="language-javascript">
using Microsoft.AspNetCore.Components.Forms;

namespace TattarrattatMVC.Models
{
    public class Palindrome
    {
        public string InputWord { get; set; }

        public string RevWord { get; set; }

        public bool IsPalindrome { get; set; }

        public string Message { get; set; }
    }
}

                </code>
            </pre>
                <h4 class="mt-4 pt-4">The View</h4>
                <pre class="line-numbers">
                <code class="language-javascript">
&lt;div class="col">
&lt;h5>Enter a word or phrase.&lt;/h5>
                                        
    &lt;form class="row gy-2 gx-3" asp-action="Reverse" asp-controller="Home" method="post">
    &lt;div class="col">
    &lt;input asp-for="InputWord" class="form-control mb-3 mt-2" value="&#64;Model.InputWord" placeholder="type a word or phrase" aria-label="Enter a string." />
        &lt;/div>
    &lt;div class="col-12 d-flex align-items-start justify-content-start">
    &lt;button id="btnSubmit" type="submit" class="btn btn-primary">Palindrome Check&lt;/button>
        &lt;/div>
    &lt;/form>
&lt;/div>

&lt;h5 class="mt-5 border-bottom border-2">Results&lt;/h5>
&lt;div class="col alert alert-primary">
    &lt;p>&#64;Html.Raw(&#64;Model.RevWord)&lt;/p>
    &lt;p id="results">&#64;Html.Raw(&#64;Model.Message)&lt;/p>
&lt;/div>
                </code>
            </pre>
                <h4 class="mt-4 pt-4">The Controller</h4>
                <pre class="line-numbers">
                <code class="language-javascript">
namespace TattarrattatMVC.Controllers
{
    public class HomeController : Controller
    {
        private readonly ILogger&lt;HomeController> _logger;

        public HomeController(ILogger&lt;HomeController> logger)
        {
            _logger = logger;
        }

        public IActionResult Index()
        {
            return View();
        }

        public IActionResult Privacy()
        {
            return View();
        }

        public IActionResult Code()
        {
            return View();
        }

        [HttpGet]
        public IActionResult Reverse()
        {
            Palindrome model = new();
            return View(model);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public IActionResult Reverse(Palindrome palindrome)
        {
            string inputWord = palindrome.InputWord;
            string revWord = "";

            for&#40;int i = inputWord.Length - 1; i >= 0; i--)
            {
                revWord+= inputWord[i];
            }

            palindrome.RevWord = revWord;

            revWord = Regex.Replace(revWord.ToLower(), "[^a-zA-Z0-9]+", "");
            inputWord = Regex.Replace(inputWord.ToLower(), "[^a-zA-Z0-9]+", "");

            if&#40;revWord == inputWord)
            {
                palindrome.IsPalindrome = true;
                palindrome.Message = $"&lt;b>{palindrome.InputWord}&lt;/b> is a palidrome!";
                palindrome.RevWord = $"Your string reversed is &lt;b>{revWord}&lt;/b>";
            }
            &#101;lse
            {
                palindrome.IsPalindrome = false;
                palindrome.Message = $"&lt;b>{palindrome.InputWord}&lt;/b> is not a palidrome.";
                palindrome.RevWord = $"Your string reversed is &lt;b>{revWord}&lt;/b>";
            }

            return View(palindrome);
        }

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }
    }
}

                </code>
            </pre>
            </div>
            <div class="col-lg-4">
                <h4 class="mt-4 pt-4">This code is structured using the MVC model.</h4>
                <h5 class="mt-4 pt-4">The Model</h5>
                <p>
                    The model represents the database. It defines the database table as well
                    as the columns. The perameters are set in the class, and translated
                    into SQL on the server side.
                </p>
                <h5 class="mt-4 pt-4">The View</h5>
                <p>
                    The view is a web page that displays the data and is the interface
                    between the user and the applicaiton. It uses a combination of HTML,
                    CSS, Javasctipt and C# to display the web page.
                </p>
                <h5 class="mt-4 pt-4">The Controller</h5>
                <p>
                    When the view, or web page is interacted with by the user, the controller
                    is consulted to determine the action to be taken. In this case, the user
                    enters data in a form, and when the button is clicked, the controller
                    executes the appropriate action determined by the code. It communicates between
                    the model and the view. The controller also exectues any commands on the
                    back end database as dictated by the code. In this example, the controller recieves
                    the data entered in the form, executes the function to reverse the string
                    entered, communicates with the database to make the designated changes,
                    then sends the result back to the view and displays it.
                </p>
            <h5>Please <a href="https://davidbellerose.com/#contact" target="_blank" alt="Contact Me">contact me</a> if you have any questions and/or would like to discuss
                my skill set and qualifications.
            </h5>
            </div>
        </div>
    </div>
</main>
